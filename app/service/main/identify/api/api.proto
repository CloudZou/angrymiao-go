// +bili:type=service
// Code generated by warden.
syntax = "proto3";
package passport.service.identify.v1;
option go_package = "v1";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// TokenReq request param for rpc TokenInfo
message GetTokenInfoReq {
    // user access token
    string token = 1 [(gogoproto.moretags) = "form:\"access_key\" validate:\"required\""];
}

// TokenReply reply val for rpc TokenInfo
message GetTokenInfoReply {
    // 用户是否登录
    bool is_login = 1 [(gogoproto.jsontag) = "is_login"];
    // user mid
    int64 mid = 2 [(gogoproto.jsontag) = "mid"];
    //username
    string username = 3 [(gogoproto.jsontag) = "username"];
    // cookie csrf
    // when token reqest this field is empty
    string csrf = 4 [(gogoproto.jsontag) = "csrfToken"];
    // expire time(unix timestamp)
    int32 expires = 5 [(gogoproto.jsontag) = "expires"];
}

service Identify {
    // TokenInfo identify info by token.
    rpc GetTokenInfo (GetTokenInfoReq) returns (GetTokenInfoReply);
}
